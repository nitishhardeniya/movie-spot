{"version":3,"sources":["components/header.jsx","components/slider.jsx","actions/movies.js","pages/showcase.js","components/rating.jsx","components/card.jsx","pages/mostpopular.js","pages/toprated.js","reducers/movie.js","sagas/index.js","store.js","App.js","serviceWorker.js","index.js","constants/config.js"],"names":["header","props","react_default","a","createElement","className","style","fontWeight","slider","movies","size","map","movie","key","id","src","IMG_THUMB","poster_path","width","height","alt","title","getPopular","type","getToprated","Showcase","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","popular","toprated","Fragment","href","length","Component","mapDispatchToProps","connect","Rating","score","card","_props$cardMeta","cardMeta","release_date","vote_average","rating","total","moment","format","Mostpopular","Toprated","reducer","arguments","undefined","action","objectSpread","loading","data","fetchPopular","fetchToprated","actionWatcher","rootSaga","regenerator_default","wrap","_context","prev","next","fetch","BASE_URL","POPULAR","API_KEY","then","json","sent","put","results","stop","_marked","_context2","TOP_RATED","_marked2","_context3","takeLatest","_marked3","_context4","all","_marked4","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","movieStore","createStore","moviesReducer","applyMiddleware","run","subscribe","console","log","getState","Nav","react_router_dom","react_router","path","component","exact","render","mostpopular","App","es","store","App_Nav","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7bd5b64b.chunk.js","sourcesContent":["import React from 'react';\n\nexport default (props) => {\n\treturn (\n\t\t<div className=\"top-bar\">\n\t\t\t<div className=\"app-title\"><span style={{fontWeight:'200'}}>Movie</span> Spot</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport {IMG_THUMB} from './../constants/config';\n\nexport default (props)\t=>\t{\n\tlet {movies,size} = props;\n\t//console.log(props);\n\treturn (<div className=\"mv-slider\">\n\t\t\t{movies.map((movie)=>{\n\t\t\t\t\t\t\treturn <div className=\"slider-tiles\" key={movie.id}>\n\t\t\t\t\t\t\t<div className=\"tile-body\">\n\t\t\t\t\t\t\t\t<img src={IMG_THUMB+movie.poster_path} width={240} height={360} alt=\"no img\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"tile-footer\">\n\t\t\t\t\t\t\t\t<div>{movie.title}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t})}\n\t\t</div>);\n}","export const getPopular = () => ({\n      type: 'GET_POPULAR',\n});\n\nexport const getToprated = () => ({\n      type: 'GET_TOPRATED',\n});","import React, { Component } from 'react';\n//import { BASE_URL, POPULAR, TOP_RATED, API_KEY } from './../constants/config';\nimport Slider from './../components/slider';\n\nimport { connect } from 'react-redux';\nimport { getPopular,getToprated } from './../actions/movies';\n\nclass Showcase extends Component {\n\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmovies:[],\n\t\t\tpopular:[],\n\t\t\ttoprated:[]\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.props.getPopular();\n\t\tthis.props.getToprated();\n\t}\n\n\tstatic getDerivedStateFromProps(props, state) {\n\t\t\n\t\tif(props.popular){\n\t\t\treturn {\n\t\t\t\tpopular:props.popular,\n\t\t\t\ttoprated:props.toprated\n\t\t\t};\n\t\t}\n\t\treturn {};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<section className=\"section\">\n\t\t\t\t\t<div className=\"cat-header\">Most Popular <a className=\"view-all\" href=\"/popular\">view all</a> </div>\n\t\t\t\t\t{this.state.popular && this.state.popular.length >0 && <Slider movies={this.state.popular} />}\n\n\t\t\t\t\t<div className=\"cat-header\">Top rated <a className=\"view-all\" href=\"/toprated\">view all</a></div>\n\t\t\t\t\t{this.state.toprated && this.state.toprated.length >0 && <Slider movies={this.state.toprated}/>}\t\n\t\t\t\t</section>\n\t\t\t\t\n\t\t\t</React.Fragment>);\n\t}\n}\n\nconst mapDispatchToProps = {\n\tgetPopular,\n\tgetToprated\n};\n\nconst mapStateToProps = (state) => ({\n\tpopular:state.popular,\n\ttoprated: state.toprated\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Showcase);\n","import React from 'react';\nconst Rating = (props) =>{\n\tconst count_stars = props.score /2;\n\treturn (<div className=\"starts\">\n\t\t\t\t&#9733; &#9733; &#9733; &#9733; &#9733;\n\t\t\t</div>)\n}\n\nexport default Rating;","import React from 'react';\nimport {IMG_THUMB} from './../constants/config';\nimport moment from 'moment';\nimport Rating from './rating';\n\nexport default (props)\t=>\t{\n\t\n\t//console.log(props.cardMeta)\n\tlet {id,poster_path,title,release_date,vote_average} = props.cardMeta;\n\treturn (<div className=\"card\" key={id}>\n\t\t\t\t<img src={IMG_THUMB+poster_path} width={240} height={360} alt=\"no img\"/>\n\t\t\t\t<div className=\"card-footer\">\n\t\t\t\t\t{/* Rating, users, add to wishlist*/}\n\t\t\t\t\t<div className=\"card-row\">{title}</div>\n\t\t\t\t\t<div className=\"card-row\">\n\t\t\t\t\t\t<Rating score={vote_average} total={10} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card-row font-grey\">{moment(release_date).format('dddd, MMMM D YYYY')}</div>\n\t\t\t\t</div>\n\t\t\t</div>)\n}","import React, { Component } from 'react';\nimport Card from './../components/card';\nimport { connect } from 'react-redux';\nimport { getPopular } from './../actions/movies';\n\nclass Mostpopular extends Component {\n\t\n\tcomponentDidMount(){\n\t\tthis.props.getPopular();\n\t}\n\n\tstatic getDerivedStateFromProps(props, state) {\n\t\t//console.log(props)\n\t\treturn {};\n\t}\n\n\trender() {\n\t\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"container-title\">Most popular</div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t{this.props.popular && this.props.popular.map((movie)=>{\n\t\t\t\t\t\treturn (<Card key={movie.id} cardMeta={movie} />)\n\t\t\t\t\t})}\n\t\t\t\t</div>\t\t\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = {\n\tgetPopular\n};\n\nconst mapStateToProps = (state) =>({\n\tpopular: state.popular\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Mostpopular);\n","import React, { Component } from 'react';\nimport Card from './../components/card';\nimport { connect } from 'react-redux';\nimport { getToprated } from './../actions/movies';\n\nclass Toprated extends Component {\n\t\n\tcomponentDidMount(){\n\t\tthis.props.getToprated();\n\t}\n\n\tstatic getDerivedStateFromProps(props, state) {\n\t\t//console.log(props)\n\t\treturn {};\n\t}\n\n\trender() {\n\t\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"container-title\">Toprated</div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t{this.props.toprated && this.props.toprated.map((movie)=>{\n\t\t\t\t\t\treturn (<Card key={movie.id} cardMeta={movie} />)\n\t\t\t\t\t})}\n\t\t\t\t</div>\t\t\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = {\n\tgetToprated\n};\n\nconst mapStateToProps = (state) =>({\n\ttoprated: state.toprated\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Toprated);\n","const reducer = (state={},action) => {\n\tswitch(action.type){\n\t\tcase 'GET_POPULAR':\n\t\t\treturn {...state,loading:true};\n\t\tcase 'GET_TOPRATED':\n\t\t\treturn {...state,loading:true};\n\t\tcase 'POPULAR_RECEIVED':\n\t\t\treturn {...state,popular:action.data,loading:false}\n\t\tcase 'TOPRATED_RECEIVED':\n\t\t\treturn {...state,toprated:action.data,loading:false}\n\t\tdefault :\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;","import {put, takeLatest, all} from 'redux-saga/effects';\nimport { BASE_URL, POPULAR, TOP_RATED, API_KEY } from './../constants/config';\n\nfunction* fetchPopular(){\n\tconst popular =\tyield fetch(BASE_URL+POPULAR+'api_key='+API_KEY).then((data)=>data.json());\n\t//console.log(popular);\n\tyield put({type:'POPULAR_RECEIVED',data:popular.results})\n}\n\nfunction* fetchToprated(){\n\tconst toprated =\tyield fetch(BASE_URL+TOP_RATED+'api_key='+API_KEY).then((data)=>data.json());\n\tyield put({type:'TOPRATED_RECEIVED',data:toprated.results})\n}\n\nfunction* actionWatcher(){\n\tyield takeLatest('GET_POPULAR',fetchPopular)\n\tyield takeLatest('GET_TOPRATED',fetchToprated)\n}\n\nexport default function* rootSaga(){\n\tyield all([\n\t\t\tactionWatcher()\n\t\t]);\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport moviesReducer from './reducers/movie';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = createSagaMiddleware();\n\nconst movieStore = createStore(\n   moviesReducer,\n   composeEnhancers(applyMiddleware(sagaMiddleware)),\n);\nsagaMiddleware.run(rootSaga);\n\nexport default movieStore;","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/header';\nimport Showcase from './pages/showcase';\nimport Mostpopular from './pages/mostpopular';\nimport Toprated from './pages/toprated';\n\n//Router\nimport {Switch,Route} from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n//Redux configs\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nconst movieStore = store;\n\nmovieStore.subscribe(()=>{\n  console.log(\"Redux state tree: \",movieStore.getState());  \n});\n\nconst Nav = () => {\n  return (<BrowserRouter>\n      <Switch>\n        <Route path='/' component={Showcase} exact/>\n        <Route path='/popular' render={()=> <Mostpopular popular={movieStore.getState().popular} />} />\n        <Route path='/toprated' component={Toprated} />\n      </Switch>\n    </BrowserRouter>)\n}\n\nfunction App() {\n  return (\n    <Provider store={movieStore} >\n      <Header />\n      <Nav />\n    </Provider>\n  );\n}\n\nexport default App;\n\n\n/*TODOS:\n  - Lazy load more movies on scroll\n  - Search a movie by name\n  - Filter movies by name, rating ,date\n  - Add a feature to add to wishlist a movie - LocalStorage\n  - Show all wishlisted movies in drawer with scheduled time to watch\n  - Add a basic login mechanism to validate user\n  - Group a collection of movies and share with friends\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n\t\"BASE_URL\":\"https://api.themoviedb.org/3/movie/\",\n\t\"IMG_THUMB\" : \"http://image.tmdb.org/t/p/w500\",\n\t\"POPULAR\" : \"popular?\",\n\t\"TOP_RATED\" : \"top_rated?\",\n\t\"API_KEY\" : \"d6dadf6fd94626fca2e1aab19a6cf5e0\"\n}"],"sourceRoot":""}