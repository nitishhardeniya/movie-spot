{"version":3,"sources":["constants/config.js","components/header.jsx","components/slider.jsx","helpers/common.js","components/filters/search.jsx","actions/filters.js","actions/movies.js","components/filters/rating.jsx","pages/showcase.js","components/rating.jsx","components/card.jsx","pages/mostpopular.js","pages/toprated.js","helpers/localDB.js","pages/info.js","reducers/movie.js","reducers/filters.js","reducers/index.js","sagas/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BASE_URL","IMG_THUMB","IMG_ORIGINAL","POPULAR","TOP_RATED","SEARCH","API_KEY","header","props","react_default","a","createElement","className","style","fontWeight","withRouter","movies","size","map","movie","key","id","onClick","movieId","history","push","src","poster_path","width","height","alt","title","common","_debounce","cb","delay","timeout","context","this","args","arguments","clearTimeout","setTimeout","apply","_throttle","flag","Search","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getFilteredResults","Common","text","console","log","getSearchResult","_this2","type","onChange","event","target","value","Component","mapDispatchToProps","query","connect","getPopular","getToprated","Showcase","state","popular","toprated","Fragment","filters_search","length","href","slider","results","Rating","score","card","_props$cardMeta","cardMeta","release_date","vote_average","components_rating","total","moment","format","Mostpopular","Toprated","LS","getData","res","localStorage","getItem","JSON","parse","setData","val","str","stringify","setItem","clearAll","clear","Info","addToWishlist","getMovieInfo","match","params","info","backdrop_path","class","genres","item","name","overview","movieInfo","getMovieDisplay","reducer","undefined","action","objectSpread","loading","data","filtersReducer","combineReducers","moviesReducer","filters","fetchPopular","fetchToprated","fetchSearchRes","fetchMovieInfo","actionWatcher","rootSaga","regenerator_default","wrap","_context","prev","next","fetch","then","json","sent","put","stop","_marked","_context2","_marked2","searchText","search","_context3","_marked3","_context4","_marked4","_context5","takeLatest","_marked5","_context6","all","_marked6","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","movieStore","createStore","reducers","applyMiddleware","run","subscribe","getState","Nav","react_router_dom","basename","process","react_router","path","component","exact","render","mostpopular","App","es","store","App_Nav","Boolean","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c541dde4.chunk.js","sourcesContent":["module.exports = {\n\t\"BASE_URL\":\"https://api.themoviedb.org/3/\",\n\t\"IMG_THUMB\" : \"http://image.tmdb.org/t/p/w500\",\n\t\"IMG_ORIGINAL\" : \"http://image.tmdb.org/t/p/original\",\n\t\"POPULAR\" : \"movie/popular?\",\n\t\"TOP_RATED\" : \"movie/top_rated?\",\n\t\"SEARCH\" : \"search/movie?\",\n\t\"API_KEY\" : \"d6dadf6fd94626fca2e1aab19a6cf5e0\"\n}","import React from 'react';\n\nexport default (props) => {\n\treturn (\n\t\t<div className=\"top-bar\">\n\t\t\t<div className=\"app-title\"><span style={{fontWeight:'200'}}>Movie</span> Spot</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport {IMG_THUMB} from './../constants/config';\nimport { withRouter } from \"react-router\";\n\nconst Slider = (props)\t=>\t{\n\tlet {movies,size} = props;\n\n\tconst gotoMovie = (movieId) => {\n\t\tprops.history.push('/movie/'+movieId)\n\t}\n\n\treturn (<div className=\"mv-slider\">\n\t\t\t{movies.map((movie)=>{\n\t\t\t\t\t\t\treturn <div className=\"slider-tiles\" key={movie.id} onClick={()=>gotoMovie(movie.id)}>\n\t\t\t\t\t\t\t<div className=\"tile-body\">\n\t\t\t\t\t\t\t\t<img src={IMG_THUMB+movie.poster_path} width={240} height={360} alt=\"no img\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"tile-footer\">\n\t\t\t\t\t\t\t\t<div>{movie.title}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t})}\n\t\t</div>);\n}\n\nexport default withRouter(Slider);","const common = {\n\t_debounce : function(cb,delay){\n\t\tlet timeout;\n\t\treturn function(){\n\t\t\tlet context = this;\n\t\t\tlet args = arguments;\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = setTimeout(function() {\n\t\t\t\tcb.apply(context,args);\n\t\t\t}, delay);\n\t\t}\n\n\t},\n\t\n\t_throttle : function(cb,delay){\n\t\tlet flag = true;\n\t\treturn function(){\n\t\t\tlet context = this;\n\t\t\tlet args = arguments;\n\t\t\tif(flag){\n\t\t\t\tcb.apply(context,args);\n\t\t\t\tflag = false;\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tflag = true;\n\t\t\t\t},delay);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default common;","import React, { Component } from 'react';\nimport Common from './../../helpers/common';\nimport {getSearchResult} from './../../actions/filters';\n\nimport { connect } from 'react-redux';\n\nclass Search extends Component {\n\tconstructor(){\n\t\tsuper();\n\t}\n\n\tgetFilteredResults = Common._debounce((text) => {\n\t\tconsole.log(\"Im called\",text);\n\t\tthis.props.getSearchResult(text);\n\t},2000)\n\n\trender(){\n\t\treturn (<div className=\"search-box\">\n\t\t\t\t<input type=\"text\" onChange={event => this.getFilteredResults(event.target.value)} />\n\t\t\t</div>)\n\t}\n}\n\nconst mapDispatchToProps = {\n\tgetSearchResult:getSearchResult\n} \n\nexport default connect(null,mapDispatchToProps)(Search);","export const getSearchResult = (text) => ({\n\ttype: \"GET_SEARCH\",\n\tquery : text\n})","export const getPopular = () => ({\n      type: 'GET_POPULAR',\n});\n\nexport const getToprated = () => ({\n      type: 'GET_TOPRATED',\n});\n\nexport const getMovieInfo = (movieId) => ({\n      type: 'GET_MOVIE_INFO',\n      query: movieId\n});","import React, { Component } from 'react';\n\nclass Rating extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>Rating</div>\n\t\t);\n\t}\n}\n\nexport default Rating;","import React, { Component } from 'react';\n//import { BASE_URL, POPULAR, TOP_RATED, API_KEY } from './../constants/config';\nimport Slider from './../components/slider';\nimport {Search} from './../components/filters';\n\nimport { connect } from 'react-redux';\nimport { getPopular,getToprated } from './../actions/movies';\n\nclass Showcase extends Component {\n\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmovies:[],\n\t\t\tpopular:[],\n\t\t\ttoprated:[]\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.props.getPopular();\n\t\tthis.props.getToprated();\n\t}\n\n\tstatic getDerivedStateFromProps(props, state) {\n\t\t\n\t\tif(props.popular){\n\t\t\treturn {\n\t\t\t\tpopular:props.popular,\n\t\t\t\ttoprated:props.toprated,\n\t\t\t\tmovies: props.movies\n\t\t\t};\n\t\t}\n\t\treturn {};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<section className=\"section\">\n\t\t\t\t\t<Search getFilteredResults={this.getFilteredResults}/>\n\t\t\t\t\t\n\t\t\t\t\t{this.state.movies && this.state.movies.length >0 && <React.Fragment> <div className=\"cat-header\">Search results <a className=\"view-all\" href=\"/popular\">view all</a> </div> <Slider movies={this.state.movies} /> </React.Fragment>}\n\n\t\t\t\t\t{this.state.popular && this.state.popular.length >0 && <React.Fragment> <div className=\"cat-header\">Most Popular <a className=\"view-all\" href=\"/popular\">view all</a> </div> <Slider movies={this.state.popular} /> </React.Fragment>}\n\n\t\t\t\t\t{this.state.toprated && this.state.toprated.length >0 && <React.Fragment> <div className=\"cat-header\">Top rated <a className=\"view-all\" href=\"/toprated\">view all</a></div> <Slider movies={this.state.toprated} /> </React.Fragment>}\n\n\t\t\t\t</section>\n\t\t\t\t\n\t\t\t</React.Fragment>);\n\t}\n}\n\nconst mapDispatchToProps = {\n\tgetPopular,\n\tgetToprated\n};\n\nconst mapStateToProps = (state) => ({\n\tpopular:state.movies.popular,\n\ttoprated: state.movies.toprated,\n\tmovies: state.movies.results\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Showcase);\n","import React from 'react';\nconst Rating = (props) =>{\n\tconst count_stars = props.score /2;\n\treturn (<div className=\"starts\">\n\t\t\t\t&#9733; &#9733; &#9733; &#9733; &#9733;\n\t\t\t</div>)\n}\n\nexport default Rating;","import React from 'react';\nimport {IMG_THUMB} from './../constants/config';\nimport moment from 'moment';\nimport Rating from './rating';\n\nexport default (props)\t=>\t{\n\t\n\t//console.log(props.cardMeta)\n\tlet {id,poster_path,title,release_date,vote_average} = props.cardMeta;\n\treturn (<div className=\"card\" key={id}>\n\t\t\t\t<img src={IMG_THUMB+poster_path} width={240} height={360} alt=\"no img\"/>\n\t\t\t\t<div className=\"card-footer\">\n\t\t\t\t\t{/* Rating, users, add to wishlist*/}\n\t\t\t\t\t<div className=\"card-row\">{title}</div>\n\t\t\t\t\t<div className=\"card-row\">\n\t\t\t\t\t\t<Rating score={vote_average} total={10} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card-row font-grey\">{moment(release_date).format('dddd, MMMM D YYYY')}</div>\n\t\t\t\t</div>\n\t\t\t</div>)\n}","import React, { Component } from 'react';\nimport Card from './../components/card';\nimport { connect } from 'react-redux';\nimport { getPopular } from './../actions/movies';\n\nclass Mostpopular extends Component {\n\t\n\tcomponentDidMount(){\n\t\tthis.props.getPopular();\n\t}\n\n\tstatic getDerivedStateFromProps(props, state) {\n\t\t//console.log(props)\n\t\treturn {};\n\t}\n\n\trender() {\n\t\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"container-title\">Most popular</div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t{this.props.popular && this.props.popular.map((movie)=>{\n\t\t\t\t\t\treturn (<Card key={movie.id} cardMeta={movie} />)\n\t\t\t\t\t})}\n\t\t\t\t</div>\t\t\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = {\n\tgetPopular\n};\n\nconst mapStateToProps = (state) =>({\n\tpopular: state.movies.popular\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Mostpopular);\n","import React, { Component } from 'react';\nimport Card from './../components/card';\nimport { connect } from 'react-redux';\nimport { getToprated } from './../actions/movies';\n\nclass Toprated extends Component {\n\t\n\tcomponentDidMount(){\n\t\tthis.props.getToprated();\n\t}\n\n\tstatic getDerivedStateFromProps(props, state) {\n\t\t//console.log(props)\n\t\treturn {};\n\t}\n\n\trender() {\n\t\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"container-title\">Toprated</div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t{this.props.toprated && this.props.toprated.map((movie)=>{\n\t\t\t\t\t\treturn (<Card key={movie.id} cardMeta={movie} />)\n\t\t\t\t\t})}\n\t\t\t\t</div>\t\t\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = {\n\tgetToprated\n};\n\nconst mapStateToProps = (state) =>({\n\ttoprated: state.movies.toprated\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Toprated);\n","const LS = {\n\tgetData : function(key){\n\t\tconst res = localStorage.getItem(key);\n\t\treturn JSON.parse(res);\n\t},\n\n\tsetData : function(key,val){\n\t\tlet str = JSON.stringify(val);\n\t\tlocalStorage.setItem(key,str);\n\t\treturn true;\n\t},\n\n\tclearAll : function(){\n\t\tlocalStorage.clear();\n\t\treturn true;\n\t}\n\t\n};\n\nexport default LS;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getMovieInfo } from './../actions/movies';\nimport {IMG_ORIGINAL} from './../constants/config';\nimport moment from 'moment';\nimport LS from './../helpers/localDB';\n\nclass Info extends Component {\n\t\n\tcomponentDidMount(){\n\t\t//console.log(this.props.match.params.movieId);\n\t\tthis.props.getMovieInfo(this.props.match.params.movieId);\n\t}\n\n\taddToWishlist = (movieId) => {\n\t\t//Add this to localStorage\n\t\t//console.log(movieId);\n\t\tLS.setData(\"wishlist\",[movieId]);\n\t}\n\n\tgetMovieDisplay(info){\n\t\treturn (<div className=\"main-content\">\n\t\t\t\t\t<img src={IMG_ORIGINAL+info.backdrop_path} class=\"img-fullpage\"  alt=\"no img\"/>\n\t\t\t\t\t<div className=\"card-lg\">\n\t\t\t\t\t\t<div className=\"card-popup\">\n\t\t\t\t\t\t\t<div className=\"popup-title\">{info.title}</div>\n\t\t\t\t\t\t\t<div className=\"card-row\">{info.genres.map(item => <div className=\"genre\">{item.name}</div>)} </div>\n\t\t\t\t\t\t\t<div className=\"card-row font-grey\">{moment(info.release_date).format('dddd, MMMM D YYYY')}</div>\n\t\t\t\t\t\t\t<p className=\"card-row desc\">{info.overview}</p>\n\t\t\t\t\t\t\t<button className=\"btn-secondary\" onClick={()=>{this.addToWishlist(info.id)}}>Add to wishlist</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>);\n\t}\n\n\trender() {\n\t\t//console.log(\"Updates!!\",this.props.info);\n\t\tconst movieInfo = this.props.info;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"\">\n\t\t\t\t\t{movieInfo ? this.getMovieDisplay(movieInfo) : <div>Loading...</div> }\t\n\t\t\t\t</div>\t\t\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = {\n\tgetMovieInfo\n}\n\nconst mapStateToProps = (state) => ({\n\tinfo: state.movies.info\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Info);\n","const reducer = (state={},action) => {\n\tswitch(action.type){\n\t\tcase 'GET_POPULAR':\n\t\t\treturn {...state,loading:true};\n\t\tcase 'GET_TOPRATED':\n\t\t\treturn {...state,loading:true};\n\t\tcase 'GET_MOVIE_INFO':\n\t\t\treturn {...state,loading:true};\n\t\tcase 'POPULAR_RECEIVED':\n\t\t\treturn {...state,popular:action.data,loading:false}\n\t\tcase 'TOPRATED_RECEIVED':\n\t\t\treturn {...state,toprated:action.data,loading:false}\n\t\tcase 'RESULTS_RECIEVED' :\n\t\t\treturn {...state,results:action.data,loading:false};\n\t\tcase 'INFO_RECIEVED' :\n\t\t\treturn {...state,info:action.data,loading:false}\n\t\tdefault :\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;","const filtersReducer = (state={},action) => {\n\tswitch(action.type){\n\t\tcase 'GET_SEARCH' :\n\t\t\treturn {...state,query:action.query,loading:true};\n\t\tdefault :\n\t\t\treturn state;\n\t}\n}\n\nexport default filtersReducer;","import { combineReducers } from 'redux'\n\nimport moviesReducer from './movie';\nimport filtersReducer from './filters';\n\n\nexport default combineReducers({\n\tmovies:moviesReducer,\n\tfilters:filtersReducer\n})","import {put, takeLatest, all} from 'redux-saga/effects';\nimport { BASE_URL, POPULAR, TOP_RATED,SEARCH, API_KEY } from './../constants/config';\n\nfunction* fetchPopular(){\n\tconst popular =\tyield fetch(BASE_URL+POPULAR+'api_key='+API_KEY).then((data)=>data.json());\n\t//console.log(popular);\n\tyield put({type:'POPULAR_RECEIVED',data:popular.results})\n}\n\nfunction* fetchToprated(){\n\tconst toprated = yield fetch(BASE_URL+TOP_RATED+'api_key='+API_KEY).then((data)=>data.json());\n\tyield put({type:'TOPRATED_RECEIVED',data:toprated.results})\n}\n\nfunction* fetchSearchRes(action){\n\tconst searchText = action.query;\n\tconst search = yield fetch(BASE_URL+SEARCH+'api_key='+API_KEY+'&query='+searchText).then((data)=>data.json());\n\tyield put({type:'RESULTS_RECIEVED',data:search.results})\n}\n\nfunction* fetchMovieInfo(action){\n\tconst movieId = action.query;\n\tconst search = yield fetch(BASE_URL+'movie/'+movieId+'?api_key='+API_KEY).then((data)=>data.json());\n\tyield put({type:'INFO_RECIEVED',data:search})\n}\n\nfunction* actionWatcher(){\n\tyield takeLatest('GET_POPULAR',fetchPopular)\n\tyield takeLatest('GET_TOPRATED',fetchToprated)\n\tyield takeLatest('GET_SEARCH',fetchSearchRes)\n\tyield takeLatest('GET_MOVIE_INFO',fetchMovieInfo)\n}\n\nexport default function* rootSaga(){\n\tyield all([\n\t\t\tactionWatcher()\n\t\t]);\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport reducers from './reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = createSagaMiddleware();\n\nconst movieStore = createStore(\n   reducers,\n   composeEnhancers(applyMiddleware(sagaMiddleware)),\n);\nsagaMiddleware.run(rootSaga);\n\nexport default movieStore;","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/header';\nimport Showcase from './pages/showcase';\nimport Mostpopular from './pages/mostpopular';\nimport Toprated from './pages/toprated';\nimport Info from './pages/info';\n\n//Router\nimport {Switch,Route} from 'react-router-dom';\nimport { HashRouter } from 'react-router-dom';\n\n//Redux configs\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nconst movieStore = store;\n\nmovieStore.subscribe(()=>{\n  console.log(\"Redux state tree: \",movieStore.getState());  \n});\n\nconst Nav = () => {\n  return (<HashRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path='/' component={Showcase} exact/>\n        <Route path='/popular' render={()=> <Mostpopular popular={movieStore.getState().popular} />} />\n        <Route path='/toprated' component={Toprated} />\n        <Route path='/movie/:movieId' component={Info} />\n      </Switch>\n    </HashRouter>)\n}\n\nfunction App() {\n  return (\n    <Provider store={movieStore} >\n      <Header />\n      <Nav />\n    </Provider>\n  );\n}\n\nexport default App;\n\n\n/*TODOS:\n  - Lazy load more movies on scroll\n  - Search a movie by name\n  - Filter movies by name, rating ,date\n  - Add a feature to add to wishlist a movie - LocalStorage\n  - Show all wishlisted movies in drawer with scheduled time to watch\n  - Add a basic login mechanism to validate user\n  - Group a collection of movies and share with friends\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}