{"version":3,"sources":["constants/config.js","helpers/localDB.js","components/wishlist.jsx","components/header.jsx","components/slider.jsx","helpers/common.js","components/filters/search.jsx","actions/filters.js","actions/movies.js","components/filters/rating.jsx","pages/showcase.js","components/rating.jsx","components/card.jsx","pages/mostpopular.js","pages/toprated.js","pages/upcoming.js","pages/info.js","reducers/movie.js","reducers/filters.js","reducers/index.js","sagas/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BASE_URL","IMG_THUMB","IMG_ORIGINAL","UPCOMING","POPULAR","TOP_RATED","SEARCH","API_KEY","LS","getData","key","res","localStorage","getItem","JSON","parse","setData","val","str","stringify","setItem","clearAll","clear","React","memo","props","wishlistData","react_default","a","createElement","className","Object","keys","map","wlItem","src","poster_path","name","wishlistBtn","display","position","width","right","backgroundColor","header","_useState","useState","_useState2","slicedToArray","opened","toggleOpen","style","fontWeight","onClick","wishlist","withRouter","movies","currentWL","movie","id","movieId","history","push","height","alt","hasOwnProperty","title","common","_debounce","cb","delay","timeout","context","this","args","arguments","clearTimeout","setTimeout","apply","_throttle","flag","Search","getFilteredResults","Common","text","_this","getSearchResult","_this2","top","type","placeholder","onChange","event","target","value","Component","mapDispatchToProps","query","connect","getMoviesByCategory","category","Showcase","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","popular","toprated","upcoming","filters","Fragment","filters_search","length","slider","href","PureComponent","results","Rating","score","_props$cardMeta","cardMeta","release_date","vote_average","components_rating","total","moment","format","Mostpopular","card","Toprated","Info","addToWishlist","wishlistItem","getMovieInfo","match","params","info","console","log","backdrop_path","genres","item","marginLeft","overview","class","movieInfo","getMovieDisplay","reducer","undefined","action","objectSpread","loading","newObj","data","filtersReducer","combineReducers","moviesReducer","fetchMoviesByCategory","fetchSearchRes","fetchMovieInfo","actionWatcher","rootSaga","regenerator_default","wrap","_context","prev","next","fetch","CONFIG","then","json","sent","put","stop","_marked","searchText","search","_context2","_marked2","_context3","_marked3","_context4","takeEvery","takeLatest","_marked4","_context5","all","_marked5","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","movieStore","createStore","reducers","applyMiddleware","run","subscribe","getState","Nav","react_router_dom","basename","process","react_router","path","component","exact","Upcoming","App","es","store","App_Nav","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5d5efd4.chunk.js","sourcesContent":["module.exports = {\n\t\"BASE_URL\":\"https://api.themoviedb.org/3/\",\n\t\"IMG_THUMB\" : \"http://image.tmdb.org/t/p/w500\",\n\t\"IMG_ORIGINAL\" : \"http://image.tmdb.org/t/p/original\",\n\t\"UPCOMING\" : \"movie/upcoming?\",\n\t\"POPULAR\" : \"movie/popular?\",\n\t\"TOP_RATED\" : \"movie/top_rated?\",\n\t\"SEARCH\" : \"search/movie?\",\n\t\"API_KEY\" : \"d6dadf6fd94626fca2e1aab19a6cf5e0\"\n}","const LS = {\n\tgetData : function(key){\n\t\tconst res = localStorage.getItem(key);\n\t\treturn JSON.parse(res);\n\t},\n\n\tsetData : function(key,val){\n\t\tlet str = JSON.stringify(val);\n\t\tlocalStorage.setItem(key,str);\n\t\treturn true;\n\t},\n\n\tclearAll : function(){\n\t\tlocalStorage.clear();\n\t\treturn true;\n\t}\n\t\n};\n\nexport default LS;","import React from 'react';\nimport LS from './../helpers/localDB';\nimport {IMG_THUMB} from './../constants/config';\n\nconst WishList = (props) => {\n\tlet wishlistData = LS.getData(\"wishlist\");\n\t//console.log(wishlistData,\"NH\")\n\treturn (<div className=\"wl\">\n\t\tNitish's wishlist :\n\t\t{wishlistData && Object.keys(wishlistData).map((wlItem) => {\n\t\t\treturn (<div className=\"wl-box\"> \n\t\t\t\t\t\t<img className=\"wl-poster\" src={IMG_THUMB+wishlistData[wlItem].poster_path} /> \n\t\t\t\t\t\t<div className=\"wl-title\">{wishlistData[wlItem].name} </div>\n\t\t\t\t\t</div>)\n\t\t})}\n\t\t</div>)\n}\n\nexport default React.memo(WishList);","import React, { useState } from 'react';\nimport LS from './../helpers/localDB';\nimport Wishlist from './wishlist';\n\nconst wishlistBtn = {\n\tdisplay: 'inline-block',\n    position: 'absolute',\n    width: '150px',\n    right: '10px',\n    backgroundColor : '#44d8b8'\n}\n\nexport default (props) => {\n\n\tconst [opened, toggleOpen] = useState(false);\n\n\treturn (\n\t\t<div className=\"top-bar\">\n\t\t\t<div className=\"app-title\"><span style={{fontWeight:'200'}}>Movie</span> Spot</div>\n\t\t\t<button className=\"btn-primary\" style={wishlistBtn} onClick={() => toggleOpen(!opened)}>Wishlist </button>\n\t\t\t{opened && <Wishlist />}\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport {IMG_THUMB} from './../constants/config';\nimport { withRouter } from \"react-router\";\nimport LS from './../helpers/localDB';\n\nconst Slider = (props)\t=>\t{\n\tlet {movies} = props;\n\n\tconst gotoMovie = (movieId) => {\n\t\tprops.history.push('/movie/'+movieId)\n\t}\n\n\tconst currentWL = LS.getData(\"wishlist\");\n\t\n\treturn (<div className=\"mv-slider\">\n\t\t\t{movies.map(movie => {\n\t\t\t\t\t\t\treturn <div className=\"slider-tiles\" key={movie.id} onClick={() => gotoMovie(movie.id)}>\n\t\t\t\t\t\t\t<div className=\"tile-body\">\n\t\t\t\t\t\t\t\t<img src={IMG_THUMB+movie.poster_path} width={240} height={360} alt=\"no img\"/>\n\t\t\t\t\t\t\t\t{currentWL && currentWL.hasOwnProperty(movie.id) ? <i className=\"material-icons mi-color wishlist-icon\">favorite</i> : <i className=\"material-icons mi-color wishlist-icon\">favorite_border</i>}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"tile-footer\">\n\t\t\t\t\t\t\t\t<div>{movie.title}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t})}\n\t\t</div>);\n}\n\nexport default React.memo(withRouter(Slider));","const common = {\n\t_debounce : function(cb,delay){\n\t\tlet timeout;\n\t\treturn function(){\n\t\t\tlet context = this;\n\t\t\tlet args = arguments;\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = setTimeout(function() {\n\t\t\t\tcb.apply(context,args);\n\t\t\t}, delay);\n\t\t}\n\n\t},\n\t\n\t_throttle : function(cb,delay){\n\t\tlet flag = true;\n\t\treturn function(){\n\t\t\tlet context = this;\n\t\t\tlet args = arguments;\n\t\t\tif(flag){\n\t\t\t\tcb.apply(context,args);\n\t\t\t\tflag = false;\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tflag = true;\n\t\t\t\t},delay);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default common;","import React, { Component } from 'react';\nimport Common from './../../helpers/common';\nimport {getSearchResult} from './../../actions/filters';\n\nimport { connect } from 'react-redux';\n\nclass Search extends Component {\n\t\n\tgetFilteredResults = Common._debounce((text) => {\n\t\tthis.props.getSearchResult(text);\n\t},2000)\n\n\trender(){\n\t\treturn (<div className=\"search-box\">\n\t\t\t\t<i className=\"material-icons mi-color mi-pointer\" style={{position: 'absolute',top: '15px',right: '10px'}}>search</i>\n\t\t\t\t<input type=\"text\" placeholder=\"Search for movies ...\" onChange={event => this.getFilteredResults(event.target.value)} />\n\t\t\t</div>)\n\t}\n}\n\nconst mapDispatchToProps = {\n\tgetSearchResult:getSearchResult\n} \n\nexport default connect(null,mapDispatchToProps)(Search);","export const getSearchResult = (text) => ({\n\ttype: \"GET_SEARCH\",\n\tquery : text\n})","export const getMoviesByCategory = (category) => ({\n\ttype : 'GET_MOVIES_BY_CAT',\n\tquery : category\n});\n\nexport const getMovieInfo = (movieId) => ({\n      type: 'GET_MOVIE_INFO',\n      query: movieId\n});","import React, { Component } from 'react';\n\nclass Rating extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>Rating</div>\n\t\t);\n\t}\n}\n\nexport default Rating;","import React, { PureComponent } from 'react';\nimport Slider from './../components/slider';\nimport {Search} from './../components/filters';\n\nimport { connect } from 'react-redux';\nimport { getMoviesByCategory } from './../actions/movies';\n\nclass Showcase extends PureComponent {\n\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmovies:[],\n\t\t\tpopular:[],\n\t\t\ttoprated:[],\n\t\t\tupcoming:[],\n\t\t\tfilters : {}\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.props.getMoviesByCategory('UPCOMING');\n\t\tthis.props.getMoviesByCategory('TOP_RATED');\n\t\tthis.props.getMoviesByCategory('POPULAR');\n\t}\n\n\tstatic getDerivedStateFromProps(props, state) {\n\t\t\n\t\tif(props.popular){\n\t\t\treturn {\n\t\t\t\tpopular:props.popular,\n\t\t\t\ttoprated:props.toprated,\n\t\t\t\tupcoming:props.upcoming,\n\t\t\t\tmovies: props.movies,\n\t\t\t\tfilters: props.filters\n\t\t\t};\n\t\t}\n\t\treturn {};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<section className=\"section\">\n\t\t\t\t\t<Search />\n\t\t\t\t\t\n\t\t\t\t\t{this.state.movies && this.state.movies.length >0 && <React.Fragment> <div className=\"cat-header\">Search results : <b>{this.props.filters.query}</b> </div> <Slider movies={this.state.movies} /> </React.Fragment>}\n\n\t\t\t\t\t{this.state.upcoming && this.state.upcoming.length >0 && <React.Fragment> <div className=\"cat-header\">Upcoming <a className=\"view-all\" href=\"/upcoming\">view all</a> </div> <Slider movies={this.state.upcoming} /> </React.Fragment>}\n\n\t\t\t\t\t{this.state.popular && this.state.popular.length >0 && <React.Fragment> <div className=\"cat-header\">Most Popular <a className=\"view-all\" href=\"/popular\">view all</a> </div> <Slider movies={this.state.popular} /> </React.Fragment>}\n\n\t\t\t\t\t{this.state.toprated && this.state.toprated.length >0 && <React.Fragment> <div className=\"cat-header\">Top rated <a className=\"view-all\" href=\"/toprated\">view all</a></div> <Slider movies={this.state.toprated} /> </React.Fragment>}\n\n\t\t\t\t</section>\n\t\t\t\t\n\t\t\t</React.Fragment>);\n\t}\n}\n\nconst mapDispatchToProps = {\n\tgetMoviesByCategory\n};\n\nconst mapStateToProps = (state) => ({\n\tpopular:state.movies.POPULAR,\n\ttoprated: state.movies.TOP_RATED,\n\tupcoming: state.movies.UPCOMING,\n\tmovies: state.movies.results,\n\tfilters: state.filters\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Showcase);\n","import React from 'react';\nconst Rating = (props) =>{\n\tconst count_stars = props.score /2;\n\treturn (<div className=\"stars\">\n\t\t\t\t&#9733; &#9733; &#9733; &#9733; &#9733;\n\t\t\t</div>)\n}\n\nexport default Rating;","import React from 'react';\nimport { withRouter } from \"react-router\";\n\nimport {IMG_THUMB} from './../constants/config';\nimport moment from 'moment';\nimport Rating from './rating';\n\nconst Card = (props)\t=>\t{\n\t\n\tconst gotoMovie = (movieId) => {\n\t\tprops.history.push('/movie/'+movieId)\n\t}\n\n\t//console.log(props.cardMeta)\n\tlet {id,poster_path,title,release_date,vote_average} = props.cardMeta;\n\treturn (<div className=\"card\" key={id} onClick={() => gotoMovie(id)} >\n\t\t\t\t<img src={IMG_THUMB+poster_path} width={240} height={360} alt=\"no img\"/>\n\t\t\t\t<div className=\"card-footer\">\n\t\t\t\t\t{/* Rating, users, add to wishlist*/}\n\t\t\t\t\t<div className=\"card-row-sm\">{title}</div>\n\t\t\t\t\t<div className=\"card-row-sm\">\n\t\t\t\t\t\t<Rating score={vote_average} total={10} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card-row-sm font-grey\">{moment(release_date).format('dddd, MMMM D YYYY')}</div>\n\t\t\t\t</div>\n\t\t\t</div>)\n}\n\nexport default React.memo(withRouter(Card));","import React, { Component } from 'react';\nimport Card from './../components/card';\nimport { connect } from 'react-redux';\nimport { getMoviesByCategory } from './../actions/movies';\n\nclass Mostpopular extends Component {\n\t\n\tcomponentDidMount(){\n\t\tthis.props.getMoviesByCategory('POPULAR');\n\t}\n\n\tstatic getDerivedStateFromProps(props, state) {\n\t\t//console.log(props)\n\t\treturn {};\n\t}\n\n\trender() {\n\t\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"container-title\">Most popular</div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t{this.props.popular && this.props.popular.map((movie)=>{\n\t\t\t\t\t\treturn (<Card key={movie.id} cardMeta={movie} />)\n\t\t\t\t\t})}\n\t\t\t\t</div>\t\t\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = {\n\tgetMoviesByCategory\n};\n\nconst mapStateToProps = (state) =>({\n\tpopular: state.movies.POPULAR\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Mostpopular);\n","import React, { Component } from 'react';\nimport Card from './../components/card';\nimport { connect } from 'react-redux';\nimport { getMoviesByCategory } from './../actions/movies';\n\nclass Toprated extends Component {\n\t\n\tcomponentDidMount(){\n\t\tthis.props.getMoviesByCategory('TOP_RATED');\n\t}\n\n\tstatic getDerivedStateFromProps(props, state) {\n\t\t//console.log(props)\n\t\treturn {};\n\t}\n\n\trender() {\n\t\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"container-title\">Toprated</div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t{this.props.toprated && this.props.toprated.map((movie)=>{\n\t\t\t\t\t\treturn (<Card key={movie.id} cardMeta={movie} />)\n\t\t\t\t\t})}\n\t\t\t\t</div>\t\t\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = {\n\tgetMoviesByCategory\n};\n\nconst mapStateToProps = (state) =>({\n\ttoprated: state.movies.TOP_RATED\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Toprated);\n","import React, { Component } from 'react';\nimport Card from './../components/card';\nimport { connect } from 'react-redux';\nimport { getMoviesByCategory } from './../actions/movies';\n\nclass Mostpopular extends Component {\n\t\n\tcomponentDidMount(){\n\t\tthis.props.getMoviesByCategory('UPCOMING');\n\t}\n\n\tstatic getDerivedStateFromProps(props, state) {\n\t\t//console.log(props)\n\t\treturn {};\n\t}\n\n\trender() {\n\t\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"container-title\">Upcoming</div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t{this.props.upcoming && this.props.upcoming.map((movie)=>{\n\t\t\t\t\t\treturn (<Card key={movie.id} cardMeta={movie} />)\n\t\t\t\t\t})}\n\t\t\t\t</div>\t\t\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = {\n\tgetMoviesByCategory\n};\n\nconst mapStateToProps = (state) =>({\n\tupcoming: state.movies.UPCOMING\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Mostpopular);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getMovieInfo } from './../actions/movies';\nimport {IMG_ORIGINAL} from './../constants/config';\nimport moment from 'moment';\nimport LS from './../helpers/localDB';\n\nclass Info extends Component {\n\t\n\tcomponentDidMount(){\n\t\t//console.log(this.props.match.params.movieId);\n\t\tthis.props.getMovieInfo(this.props.match.params.movieId);\n\t}\n\n\taddToWishlist = (movie) => {\n\t\t//Add this to localStorage\n\t\t//console.log(movieId);\n\t\tlet wishlistItem = {\n\t\t\tid: movie.id,\n\t\t\tname: movie.title,\n\t\t\tposter_path : movie.poster_path\n\t\t}\n\t\tlet currentWL = LS.getData(\"wishlist\");\n\t\tif(currentWL){\n\t\t\tcurrentWL[wishlistItem.id] = wishlistItem;\n\t\t}else{\n\t\t\tcurrentWL = {};\n\t\t\tcurrentWL[wishlistItem.id] = wishlistItem;\n\t\t}\n\t\tLS.setData(\"wishlist\",currentWL);\n\t\n\t}\n\n\tgetMovieDisplay(info){\n\t\tlet currentWL = LS.getData(\"wishlist\");\n\t\tif(currentWL && currentWL.hasOwnProperty(info.id)){\n\t\t\tconsole.log(\"Im in wishlist\",info)\n\t\t}\n\t\treturn (<div className=\"main-content\">\n\t\t\t\t\t<img src={IMG_ORIGINAL+info.backdrop_path} className=\"img-fullpage\"  alt=\"no img\"/>\n\t\t\t\t\t<div className=\"card-lg\">\n\t\t\t\t\t\t<div className=\"card-popup\">\n\t\t\t\t\t\t\t<div className=\"popup-title\">{info.title}</div>\n\t\t\t\t\t\t\t<div className=\"card-row\">{info.genres.map(item => <div key={item.id} className=\"genre\">{item.name}</div>)} </div>\n\t\t\t\t\t\t\t<div className=\"card-row font-grey\" style={{marginLeft:'5px'}}>{moment(info.release_date).format('dddd, MMMM D YYYY')}</div>\n\t\t\t\t\t\t\t<p className=\"card-row desc\">{info.overview}</p>\n\t\t\t\t\t\t\t<div className=\"card-row\">\n\t\t\t\t\t\t\t\t{currentWL && currentWL.hasOwnProperty(info.id) ? <div className=\"wishlisted\">\n\t\t\t\t\t\t\t\t\t<i class=\"material-icons\">done</i>\n\t\t\t\t\t\t\t\t\tWishlisted\n\t\t\t\t\t\t\t\t</div> : \n\t\t\t\t\t\t\t\t<button className=\"btn-secondary\" onClick={()=>{this.addToWishlist(info)}}>Add to wishlist</button>}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>);\n\t}\n\n\trender() {\n\t\t//console.log(\"Updates!!\",this.props.info);\n\t\tconst movieInfo = this.props.info;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"\">\n\t\t\t\t\t{movieInfo ? this.getMovieDisplay(movieInfo) : <div>Loading...</div> }\t\n\t\t\t\t</div>\t\t\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = {\n\tgetMovieInfo\n}\n\nconst mapStateToProps = (state) => ({\n\tinfo: state.movies.info\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Info);\n","const reducer = (state={},action) => {\n\tswitch(action.type){\n\t\tcase 'GET_MOVIES_BY_CAT':\n\t\t\treturn {...state,loading:true};\n\t\tcase 'GET_MOVIE_INFO':\n\t\t\treturn {...state,loading:true};\n\t\tcase 'GET_SEARCH' :\n\t\t\treturn {...state,loading:true};\n\t\tcase 'MOVIES_BY_CAT_RECEIVED':\n\t\t\tlet newObj = {};\n\t\t\tnewObj[action.query] = action.data;\n\t\t\treturn {...state,...newObj,loading:false};\n\t\tcase 'RESULTS_RECIEVED' :\n\t\t\treturn {...state,results:action.data,loading:false};\n\t\tcase 'INFO_RECIEVED' :\n\t\t\treturn {...state,info:action.data,loading:false};\n\t\tdefault :\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;","const filtersReducer = (state={},action) => {\n\tswitch(action.type){\n\t\tcase 'GET_SEARCH' :\n\t\t\treturn {...state,query:action.query,loading:true};\n\t\tdefault :\n\t\t\treturn state;\n\t}\n}\n\nexport default filtersReducer;","import { combineReducers } from 'redux'\n\nimport moviesReducer from './movie';\nimport filtersReducer from './filters';\n\n\nexport default combineReducers({\n\tmovies:moviesReducer,\n\tfilters:filtersReducer\n})","import {put, takeLatest, takeEvery, all} from 'redux-saga/effects';\nimport { BASE_URL, SEARCH, API_KEY } from './../constants/config';\nimport CONFIG from './../constants/config';\n\nfunction* fetchMoviesByCategory(action){\n\tconst popular =\tyield fetch(BASE_URL+CONFIG[action.query]+'api_key='+API_KEY).then((data)=>data.json());\n\tyield put({type:'MOVIES_BY_CAT_RECEIVED',query:action.query,data:popular.results});\n}\n\nfunction* fetchSearchRes(action){\n\tconst searchText = action.query;\n\tconst search = yield fetch(BASE_URL+SEARCH+'api_key='+API_KEY+'&query='+searchText).then((data)=>data.json());\n\tyield put({type:'RESULTS_RECIEVED',data:search.results});\n}\n\nfunction* fetchMovieInfo(action){\n\tconst movieId = action.query;\n\tconst search = yield fetch(BASE_URL+'movie/'+movieId+'?api_key='+API_KEY).then((data)=>data.json());\n\tyield put({type:'INFO_RECIEVED',data:search});\n}\n\nfunction* actionWatcher(){\n\tyield takeEvery('GET_MOVIES_BY_CAT',fetchMoviesByCategory);\n\tyield takeLatest('GET_SEARCH',fetchSearchRes);\n\tyield takeLatest('GET_MOVIE_INFO',fetchMovieInfo);\n}\n\nexport default function* rootSaga(){\n\tyield all([\n\t\tactionWatcher()\n\t]);\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport reducers from './reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = createSagaMiddleware();\n\nconst movieStore = createStore(\n   reducers,\n   composeEnhancers(applyMiddleware(sagaMiddleware)),\n);\nsagaMiddleware.run(rootSaga);\n\nexport default movieStore;","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/header';\nimport Showcase from './pages/showcase';\nimport Mostpopular from './pages/mostpopular';\nimport Toprated from './pages/toprated';\nimport Upcoming from './pages/upcoming';\n//import Category from './pages/category';\nimport Info from './pages/info';\n\n//Router\nimport {Switch,Route} from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n//Redux configs\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nconst movieStore = store;\n\nmovieStore.subscribe(()=>{\n  console.log(\"Redux state tree: \",movieStore.getState());  \n});\n\nconst Nav = () => {\n  return (<BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path='/' component={Showcase} exact/>\n        <Route path='/upcoming' component={Upcoming} />\n        <Route path='/popular' component={Mostpopular} />\n        <Route path='/toprated' component={Toprated} />\n        {/*<Route path='/category/:category' component={Category} />*/}\n        <Route path='/movie/:movieId' component={Info} />\n      </Switch>\n    </BrowserRouter>)\n}\n\nfunction App() {\n  return (\n    <Provider store={movieStore} >\n      <Header />\n      <Nav />\n    </Provider>\n  );\n}\n\nexport default App;\n\n\n/*TODOS:\n  - D Refactoring of actions\n  - Lazy load more movies on scroll\n  - D Search a movie by name\n  - Filter movies by name, rating ,date\n  - D Add a feature to add to wishlist a movie - LocalStorage\n  - Show all wishlisted movies in drawer with scheduled time to watch\n  - Add a basic login mechanism to validate user\n  - Group a collection of movies and share with friends\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}